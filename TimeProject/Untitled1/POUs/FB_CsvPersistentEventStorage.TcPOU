<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="FB_CsvPersistentEventStorage" Id="{4c53376d-a9e4-4dad-8d9e-6eb933dbfe44}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_CsvPersistentEventStorage IMPLEMENTS I_PersistentEventStorage
VAR
	eWriteState : (FILE_OPEN_TRIGGER, FILE_OPEN, WAIT_FOR_EVENT, WRITE_EVENT_TRIGGER, WRITE_EVENT, FILE_CLOSE_TRIGGER, FILE_CLOSE, ERROR);
	fb_FileOpen : FB_FileOpen := (sPathName := 'D:\Events.log', nMode := FOPEN_MODETEXT OR FOPEN_MODEAPPEND);
	fb_FilePuts : FB_FilePuts;
	fb_FileClose : FB_FileClose;
	stEventWrittenToFile : ST_event;
	Csvstring : T_MaxString;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[CASE eWriteState OF
	
	FILE_OPEN_TRIGGER :
		fb_FileOpen(bExecute := TRUE) ;
		eWriteState := FILE_OPEN;
	FILE_OPEN :
		fb_FileOpen(bExecute := FALSE);
		IF fb_FileOpen.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fb_FileOpen.bBusy AND fb_FileOpen.hFile <> 0 THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
		
	WAIT_FOR_EVENT :
		// do not do anything
	WRITE_EVENT_TRIGGER:
		Csvstring := CreateCsvString(stEvent := stEventWrittenToFile);
		fb_FilePuts(bExecute := TRUE,
					sLine := Csvstring,
					hFile := fb_FileOpen.hFile);
		eWriteState := WRITE_EVENT;
	WRITE_EVENT : 
		fb_FilePuts(bExecute := FALSE);
		IF fb_FilePuts.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fb_FilePuts.bBusy THEN
			eWriteState := WAIT_FOR_EVENT;
		END_IF
	
	FILE_CLOSE_TRIGGER :
		fb_FileClose(bExecute := TRUE,
					hFile := fb_FileOpen.hFile);
		eWriteState := FILE_CLOSE;
		
	FILE_CLOSE :
		fb_FileClose(bExecute := FALSE);
		IF fb_FileClose.bError THEN
			eWriteState := ERROR;
		ELSIF NOT fb_FileClose.bBusy THEN
			eWriteState := FILE_OPEN_TRIGGER;
		END_IF
	ERROR :
		// do nothing!
	
END_CASE]]></ST>
    </Implementation>
    <Method Name="CreateCsvString" Id="{ec261612-3adf-4dd7-a3ca-a5ed9460a3c5}">
      <Declaration><![CDATA[METHOD PRIVATE CreateCsvString : T_MaxString
VAR_INPUT
	stEvent : REFERENCE TO ST_Event;
END_VAR

VAR
	TempString : T_MaxString;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[TempString := TO_STRING(stEvent.eEventType);
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.eEventSeverity));
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.nEventIdentity));
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := stEvent.sEventText);
TempString := CONCAT(STR1 := TempString, STR2 := ',');
TempString := CONCAT(STR1 := TempString, STR2 := TO_STRING(stEvent.dtTimeStamp));
TempString := CONCAT(STR1 := TempString, STR2 := '$n');

CreateCsvString := TempString;]]></ST>
      </Implementation>
    </Method>
    <Method Name="StoreEvent" Id="{aff83f82-0478-49f1-ad48-02bbcbec203a}">
      <Declaration><![CDATA[{warning '添加方法实现'}
METHOD StoreEvent
VAR_INPUT
	stEvent	: ST_Event;
END_VAR
]]></Declaration>
      <Implementation>
        <ST><![CDATA[//Here is where the csvwritting to be done
IF eWriteState = WAIT_FOR_EVENT THEN
	eWriteState := WRITE_EVENT_TRIGGER;
	stEventWrittenToFile := stEvent;
END_IF]]></ST>
      </Implementation>
    </Method>
    <LineIds Name="FB_CsvPersistentEventStorage">
      <LineId Id="9" Count="0" />
      <LineId Id="32" Count="0" />
      <LineId Id="20" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="17" Count="0" />
      <LineId Id="23" Count="1" />
      <LineId Id="35" Count="1" />
      <LineId Id="25" Count="0" />
      <LineId Id="38" Count="0" />
      <LineId Id="13" Count="0" />
      <LineId Id="40" Count="0" />
      <LineId Id="42" Count="0" />
      <LineId Id="47" Count="0" />
      <LineId Id="43" Count="0" />
      <LineId Id="48" Count="0" />
      <LineId Id="58" Count="0" />
      <LineId Id="44" Count="0" />
      <LineId Id="14" Count="0" />
      <LineId Id="29" Count="0" />
      <LineId Id="49" Count="1" />
      <LineId Id="52" Count="0" />
      <LineId Id="54" Count="0" />
      <LineId Id="51" Count="0" />
      <LineId Id="57" Count="0" />
      <LineId Id="59" Count="0" />
      <LineId Id="63" Count="0" />
      <LineId Id="75" Count="0" />
      <LineId Id="66" Count="1" />
      <LineId Id="15" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="68" Count="0" />
      <LineId Id="73" Count="0" />
      <LineId Id="71" Count="0" />
      <LineId Id="74" Count="0" />
      <LineId Id="70" Count="0" />
      <LineId Id="26" Count="0" />
      <LineId Id="31" Count="0" />
      <LineId Id="27" Count="0" />
      <LineId Id="12" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.CreateCsvString">
      <LineId Id="5" Count="0" />
      <LineId Id="11" Count="8" />
      <LineId Id="21" Count="0" />
      <LineId Id="20" Count="0" />
    </LineIds>
    <LineIds Name="FB_CsvPersistentEventStorage.StoreEvent">
      <LineId Id="7" Count="2" />
      <LineId Id="11" Count="0" />
      <LineId Id="10" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>